#!/sbin/openrc-run
depend() {
    after net network-online logger docker docker-credential-file
    provide buildkite-agent
}

start() {
    arguments=""
    # fetch name
    name=$(curl --fail --silent "http://metadata.google.internal/computeMetadata/v1/instance/name" -H "Metadata-Flavor: Google")
    status=$?
    if [ $status -ne 0 ]; then
        name=$(hostname)
    fi
    

    # fetch token
    token=$(curl --fail --silent "http://metadata.google.internal/computeMetadata/v1/instance/attributes/buildkite-token" -H "Metadata-Flavor: Google")
    status=$?
    if [ $status -ne 0 ]; then
        echo "Unable to get buildkite-token"
        exit $status
    fi
    export BUILDKITE_AGENT_TOKEN=$token

    # fetch priority
    priority=$(curl --fail --silent "http://metadata.google.internal/computeMetadata/v1/instance/attributes/buildkite-priority" -H "Metadata-Flavor: Google")
    if [ $? -ne 0 ]; then
        priority=$(date --utc +"%s")
    fi
    arguments="$arguments --priority $priority"

    # fetch tags
    tags=$(curl --fail --silent "http://metadata.google.internal/computeMetadata/v1/instance/attributes/buildkite-tags" -H "Metadata-Flavor: Google")
    if [ $? -eq 0 ]; then
        arguments="$arguments --tags $tags"
    fi

    # fetch sshkey
    key=$(curl --fail --silent "http://metadata.google.internal/computeMetadata/v1/instance/attributes/buildkite-sshkey" -H "Metadata-Flavor: Google")
    status=$?
    if [ $status -eq 0 ]; then
        mkdir /home/buildkite/.ssh 2>&1 || true
        echo $key | base64 --decode > /home/buildkite/.ssh/identity
        cat <<'END' > /home/buildkite/.ssh/config
    Host *
        IdentityFile /home/buildkite/.ssh/identity
END
        chown -hR buildkite:buildkite /home/buildkite/.ssh
        chmod -R 0700 /home/buildkite/.ssh
    fi

    # fetch instance count
    agent_count=$(curl --fail --silent "http://metadata.google.internal/computeMetadata/v1/instance/attributes/buildkite-agent-count" -H "Metadata-Flavor: Google")
    status=$?
    if [ $status -ne 0 ]; then
        agent_count=1
    fi

    for i in $(seq 1 $agent_count); do
        if [ ! -d "/home/buildkite/$i" ]; then
            mkdir --mode 0755 /home/buildkite/$i
            mkdir --mode 0755 /home/buildkite/$i/builds
            mkdir --mode 0755 /home/buildkite/$i/plugins
            mkdir --mode 0755 /home/buildkite/$i/hooks
            chown -hR buildkite:buildkite /home/buildkite/$i
        fi
        final_arguments="$arguments --name $name-$i --build-path /home/buildkite/$i/builds --plugins-path /home/buildkite/$i/plugins --hooks-path=/home/buildkite/$i/hooks"
        nohup sudo --preserve-env=BUILDKITE_AGENT_TOKEN --user buildkite /usr/sbin/buildkite-agent start $final_arguments 2>&1 >> /var/log/buildkite.$i.log &
        sleep 1
        echo $! > /var/run/buildkite.$i.pid
    done

    # check if processes run
    sleep 1
    kill -0 $(cat /var/run/buildkite.*.pid) &> /dev/null
    if [ $? -ne 0 ]; then
        echo "failed to start buildkite agents"
        cat /var/log/buildkite.*.log
        exit 1
    fi

    # start nginx (for health)
    /etc/init.d/nginx start
}

stop () {
    kill -15 $(cat /var/run/buildkite.*.pid)

    for i in {1..600}
    do
        kill -0 $(cat /var/run/buildkite.*.pid) &> /dev/null
        if [ $? -eq 0 ]; then
            break
        fi
        echo "Waiting for the process to finish"
        sleep 1
    done
    kill -9 $(cat /var/run/buildkite.*.pid)
    rm /var/run/buildkite.*.pid
    /etc/init.d/nginx stop
    exit 0
}